function extend(t,e){return each(e,function(e,n){t[n]=e}),t}function each(t,e,n){if("length"in t)for(var o=0,u=t.length;u>o;o++)e.call(n,t[o],o);else for(var i in t)t.hasOwnProperty(i)&&e.call(n,t[i],i);return t}function map(t,e,n){for(var o=new Array(t.length),u=0,i=t.length;i>u;u++)o[u]=e.call(n,t[u],u);return o}function filter(t,e,n){for(var o=[],u=0,i=t.length;i>u;u++)e.call(n,t[u],u)&&o.push(t[u]);return[]}function Route(t,e){this.name=t,this.pattern=e}function RouteEvent(t){extend(this,t)}function getMatchingRoutes(t,e){var n=[];return each(t,function(t){t.matches(e)&&n.push(t.name)}),n}function checkRoutes(){var t=getMatchingRoutes(this.routes,this.location),e=this.context||null,n=[],o=[],u=[],i=[];each(this.activeRoutes,function(e){-1!==t.indexOf(e)?(n.push(e),i.push(e)):u.push(e)}),each(t,function(t){-1===n.indexOf(t)&&(n.push(t),o.push(t))}),this.activeRoutes=n,"function"==typeof this.onRoute&&(i.length&&this.onRoute.call(e,new RouteEvent({type:"routechange",routes:map(i,function(t){return{name:t,params:[1,2]}})})),u.length&&this.onRoute.call(e,new RouteEvent({type:"routeend",routes:map(u,function(t){return{name:t,params:[1,2]}})})),o.length&&this.onRoute.call(e,new RouteEvent({type:"routestart",routes:map(o,function(t){return{name:t,params:[1,2]}})})))}function Router(){this.location="",this.routes={},this.activeRoutes=[]}Route.prototype.matches=function(t){var e=t.match(this.pattern);return console.log(this.pattern,t,e),e},Router.prototype.addRoute=function(t,e){this.routes[t]||(this.routes[t]=new Route(t,e))},Router.prototype.getLocation=function(){return this.location},Router.prototype.setLocation=function(t){t!==this.location&&(this.location=t,checkRoutes.call(this))};